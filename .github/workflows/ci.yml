name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:  # Allows manual testing from GitHub UI

jobs:
  frontend:
    name: Frontend CI
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./apps/frontend

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: |
          package-lock.json
          apps/frontend/package-lock.json

    - name: Install root dependencies
      run: npm ci
      working-directory: .

    - name: Install frontend dependencies
      run: npm ci

    - name: Run frontend linting
      run: npm run lint

    - name: Run frontend type check
      run: npm run type-check

    - name: Run frontend tests
      run: npm run test

    - name: Build frontend
      run: npm run build

  backend:
    name: Backend CI
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./apps/backend

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/pip
          ./apps/backend/venv
        key: ${{ runner.os }}-python-3.11-${{ hashFiles('apps/backend/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-python-3.11-

    - name: Install Python dependencies
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run backend linting
      run: |
        source venv/bin/activate
        ruff check .
        black --check .

    - name: Run backend type checking
      run: |
        source venv/bin/activate
        mypy . || echo "Type checking completed with warnings"

    - name: Run backend tests
      run: |
        source venv/bin/activate
        pytest

    - name: Test backend build
      run: |
        source venv/bin/activate
        python -m py_compile main.py

  monorepo:
    name: Monorepo Integration
    runs-on: ubuntu-latest
    needs: [frontend, backend]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run Turborepo build
      run: npm run build

    - name: Run Turborepo tests
      run: npm run test

    - name: Run Turborepo linting
      run: npm run lint